name: Convert Markdown to PDF
on:
  push:
    paths:
      - '**.md'  # Trigger only when .md files change

permissions:
  contents: write

jobs:
  convert:
    runs-on: ubuntu-latest
    # Uses GitHub's native runner with Git preinstalled
    container:
      image: pandoc/latex:latest  # Official Pandoc+LaTeX image with ubuntu! (default is with alpine)
      
    steps:
      - name: Install Git
        run: |
          if [ -f /etc/alpine-release ]; then
            apk update && apk add --no-cache git
          elif [ -f /etc/debian_version ]; then
            apt-get update && apt-get install -y git
          else
            echo "❌ Unsupported OS: Cannot install Git"
            exit 1
          fi

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required to detect changed files

      - name: Fix Git ownership
        run: git config --global --add safe.directory "$GITHUB_WORKSPACE"

      - name: Process files in container
        run: |
          PREV_SHA="${{ github.event.before }}"
          mkdir -p pdfs
          for file in $(git diff --name-only $PREV_SHA HEAD | grep '\.md$' || true); do
            echo "Processing file: ${file}"
            # Check if the markdown file indicates it's a Beamer presentation by searching for a 'Beamer' keyword in metadata
            if grep -qi 'beamer' "${file}"; then
                echo "Detected Beamer presentation in ${file}. Converting using Beamer template."
                pandoc "${file}" -t beamer -o "pdfs/${file%.*}.pdf"
            else
                echo "Converting ${file} as a standard markdown document."
                pandoc "${file}" -o "pdfs/${file%.*}.pdf"
                ls pdfs
            fi
          done

      - name: Commit and push PDFs
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git checkout -B pdf-artifacts
          git push --set-upstream origin pdf-artifacts
          git add pdfs/*.pdf 2>/dev/null || true
          git diff --quiet && git diff --staged --quiet || git commit -m "Auto-generate PDFs [skip ci]"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
          git push

      # - name: Upload PDF artifacts
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: generated-pdfs
      #     path: '**.pdf'
